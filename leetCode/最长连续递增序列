# 最长连续递增序列

给定一个未经排序的整数数组，找到最长且 连续递增的子序列，并返回该序列的长度。

连续递增的子序列 可以由两个下标 l 和 r（l < r）确定，如果对于每个 l <= i < r，都有 nums[i] < nums[i + 1] ，那么子序列 [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] 就是连续递增子序列。

```javascript
/**
 * @param {number[]} nums
 * @return {number}
 */
var findLengthOfLCIS = function(nums) {
// 动态规划，后一个如果大于前一个等前一个+1；否则=1；最后取最大值
    let dp = [];
    dp[0] = 1;
    for(let i=1,len=nums.length;i<len;i++) {
        if (nums[i] > nums[i-1]) {
            dp[i] = dp[i-1] + 1;
        } else {
            dp[i] = 1;
        }
    }
    return Math.max(...dp)
};
```

## 2022-3-2
